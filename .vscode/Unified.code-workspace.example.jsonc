{
	/**
	This file defines an example VSCode workspace for working with both Circt and MLIR.
	We are not committed to keeping it up-to-date, but we believe it is valueable as a starting point for folks interested in using VSCode as their IDE.
	*/
	"folders": [
		{
			"name": "CIRCT",
			"path": ".."
		},
		{
			"name": "MLIR",
			"path": "../llvm/mlir"
		}
	],
	"settings": {
		"files.exclude": {
			"llvm": true
		},
		"C_Cpp.default.configurationProvider": "ms-vscode.cmake-tools",
		"cmake.sourceDirectory": "${workspaceFolder:CIRCT}/llvm/llvm",
		"cmake.buildDirectory": "${workspaceFolder:CIRCT}/build/vscode",
		"cmake.configureArgs": [
			// LLVM
			"-DLLVM_ENABLE_PROJECTS=mlir",
			"-DLLVM_TARGETS_TO_BUILD=X86;RISCV",
			"-DLLVM_ENABLE_ASSERTIONS=ON",
			"-DLLVM_BUILD_EXAMPLES=OFF",
			"-DLLVM_ENABLE_OCAMLDOC=OFF",
			"-DLLVM_ENABLE_BINDINGS=OFF",
			"-DLLVM_BUILD_TOOLS=ON",

			// Circt
			"-DLLVM_EXTERNAL_PROJECTS=circt",
			"-DLLVM_EXTERNAL_CIRCT_SOURCE_DIR=${workspaceFolder:CIRCT}",
			"-DLLVM_OPTIMIZED_TABLEGEN=ON"
		],
		"cmake.generator": "Ninja",
		"editor.formatOnSave": true,
		"editor.defaultFormatter": "xaver.clang-format"
	},
	"extensions": {
		"recommendations": [
			"xaver.clang-format",
			"ms-vscode.cmake-tools"
		]
	}
}
