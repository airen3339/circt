name: Upload Binaries

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  publish:
    strategy:
      matrix:
        compiler:
          - cc: clang
            cxx: clang++
            mode: release
            assert: OFF
            shared: OFF
        runner: [ubuntu-20.04, ubuntu-18.04, macos-11]
        include:
          - runner: ubuntu-20.04
            os: linux
            cmake-args: ''
            tar: tar
          - runner: ubuntu-18.04
            os: linux
            cmake-args: ''
            tar: tar
          - runner: macos-11
            os: macos
            cmake-args: ''
            tar: gtar
    runs-on: ${{ matrix.runner }}
    steps:
      # Clone the CIRCT repo and its submodules. Do shallow clone to save clone
      # time.
      - name: Get CIRCT
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          submodules: "true"

      - name: Build LLVM
        run: |
          mkdir -p llvm/build
          cd llvm/build
          cmake -G Ninja ../llvm \
              ${{ matrix.cmake-args }} \
              -DCMAKE_BUILD_TYPE=${{ matrix.compiler.mode }} \
              -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
              -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
              -DBUILD_SHARED_LIBS=${{ matrix.compiler.shared }} \
              -DLLVM_BUILD_EXAMPLES=OFF \
              -DLLVM_ENABLE_ASSERTIONS=${{ matrix.compiler.assert }} \
              -DLLVM_ENABLE_BINDINGS=OFF \
              -DLLVM_ENABLE_OCAMLDOC=OFF \
              -DLLVM_ENABLE_PROJECTS='mlir' \
              -DLLVM_OPTIMIZED_TABLEGEN=ON \
              -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
              -DLLVM_ENABLE_TERMINFO=OFF \
              -DLLVM_PARALLEL_LINK_JOBS=1 \
              -DLLVM_TARGETS_TO_BUILD="host"
          ninja
          ninja check-llvm check-mlir

      # --------
      # Build and test CIRCT
      # --------

      - name: Build and Test CIRCT
        run: |
          mkdir build
          cd build
          cmake -G Ninja .. \
            ${{ matrix.cmake-args }} \
            -DBUILD_SHARED_LIBS=${{ matrix.compiler.shared }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.compiler.mode }} \
            -DLLVM_ENABLE_ASSERTIONS=${{ matrix.compiler.assert }} \
            -DMLIR_DIR=`pwd`/../llvm/build/lib/cmake/mlir \
            -DLLVM_DIR=`pwd`/../llvm/build/lib/cmake/llvm \
            -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
            -DVERILATOR_DISABLE=ON \
            -DLLVM_ENABLE_TERMINFO=OFF \
            -DLLVM_STATIC_LINK_CXX_STDLIB=ON \
            -DLLVM_PARALLEL_LINK_JOBS=1 \
            -DCIRCT_RELEASE_TAG_ENABLED=ON \
            -DCIRCT_RELEASE_TAG=${{ github.ref_name }} \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=OFF
          ninja
          ninja check-circt check-circt-unit
      - name: Display Files
        run: file build/bin/*
      - name: Package Binaries
        run: |
          cd build
          ${{ matrix.tar }} czf circt-bin-${{ matrix.runner }}.tar.gz bin
      - name: Show Tarball
        run: |
          cd build
          ls -l circt-bin-${{ matrix.runner }}.tar.gz
          shasum -a 256 circt-bin-${{ matrix.runner }}.tar.gz
      - name: Upload Binaries
        uses: AButler/upload-release-assets@v2.0
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/circt-bin-${{ matrix.runner }}.tar.gz
          repo-token: ${{ secrets.GITHUB_TOKEN }}
