{# This template is not generated. #}
# Generated ESI runtime API.

from .common import *

{%- macro port_list(ports) -%}
  {% for port in ports -%}
    {{-port.name}}_ports: typing.List[Port]{% if not loop.last %}, {% endif %}
  {%- endfor %}
{%- endmacro %}

{%- for svc in services.declarations %}
class {{ svc['name' ]}}:

  def __init__(self, {{ port_list(svc.ports) }}):
    {%- for port in svc.ports %}
    self.{{port.name}} = {{port.name}}_ports
    {%- endfor %}

  {% for port in svc.ports if port['to-server-type'] is defined -%}
  def {{port.name}}_read_any(self):
    for p in self.{{port.name}}:
      rc = p.read(block=False)
      if rc is not None:
        return rc
    return None

  {% endfor -%}
{% endfor %}


class DesignModules:
{% for mod in modules %}
  class {{mod.name}}:

    def __init__(self):
      {%- for inst_name, child_mod in mod.instances.items() %}
      self.{{camel_to_snake(inst_name)}} = DesignModules.{{child_mod.name}}()
      {%- endfor %}
      {%- for svc in mod.services %}
      {%- set ports = get_ports_for_clients(svc.clients) -%}
      {% for port_name, port_clients in ports.items() %}
      {{port_name}} = [
        {% for pc in port_clients -%}
          {% if pc.to_client_type is defined and pc.to_server_type is defined -%}
          ReadWritePort({{pc.client_name}}, read_type=ESITypes.{{get_type_name(pc.to_server_type)}}, write_type=ESITypes.{{get_type_name(pc.to_client_type)}})
          {%- elif pc.to_client_type is defined -%}
          WritePort({{pc.client_name}}, write_type=ESITypes.{{get_type_name(pc.to_client_type)}})
          {%- elif pc.to_server_type is defined -%}
          ReadPort({{pc.client_name}}, read_type=ESITypes.{{get_type_name(pc.to_server_type)}})
          {%- endif -%}
          {%- if not loop.last %}, {% endif %}
        {%- if not loop.last %}
        {% endif -%}
        {% endfor %}
      ]
      {%- endfor %}
      self.{{camel_to_snake(svc.service)}} = {{svc.service}}(
        {%- for pn in ports.keys() -%}{{pn}}_ports={{pn}}{% if not loop.last %}, {% endif %}{% endfor -%}
      )
      {%- endfor %}

{% endfor %} 


class ESITypes:
{% for type_name, type_dict in types.items() %}
  {{type_name}} = {{type_str_of(type_dict)}}
{%- endfor %}

{% for top in tops %}
{{camel_to_snake(top.name)}} = DesignModules.{{top.name}}()
{%- endfor %}
