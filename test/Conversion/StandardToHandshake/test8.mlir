// NOTE: Assertions have been autogenerated by utils/update_mlir_test_checks.py
// RUN: circt-opt -lower-std-to-handshake %s | FileCheck %s
// CHECK-LABEL:   handshake.func @simple_loop(
// CHECK-SAME:                                %[[VAL_0:.*]]: none, ...) -> none attributes {argNames = ["inCtrl"], resNames = ["outCtrl"]} {
// CHECK:           %[[VAL_1:.*]] = br %[[VAL_0]] : none
// CHECK:           %[[VAL_2:.*]], %[[VAL_3:.*]] = control_merge %[[VAL_1]] : none
// CHECK:           %[[VAL_4:.*]]:2 = fork [2] %[[VAL_2]] : none
// CHECK:           sink %[[VAL_3]] : index
// CHECK:           %[[VAL_5:.*]] = constant %[[VAL_4]]#0 {value = 42 : index} : index
// CHECK:           %[[VAL_6:.*]] = br %[[VAL_4]]#1 : none
// CHECK:           %[[VAL_7:.*]] = br %[[VAL_5]] : index
// CHECK:           %[[VAL_8:.*]] = mux %[[VAL_9:.*]] {{\[}}%[[VAL_10:.*]], %[[VAL_7]]] : index, index
// CHECK:           %[[VAL_11:.*]]:3 = fork [3] %[[VAL_8]] : index
// CHECK:           %[[VAL_12:.*]], %[[VAL_9]] = control_merge %[[VAL_13:.*]], %[[VAL_6]] : none
// CHECK:           %[[VAL_14:.*]] = arith.cmpi slt, %[[VAL_11]]#1, %[[VAL_11]]#2 : index
// CHECK:           %[[VAL_15:.*]]:2 = fork [2] %[[VAL_14]] : i1
// CHECK:           %[[VAL_16:.*]], %[[VAL_17:.*]] = cond_br %[[VAL_15]]#1, %[[VAL_11]]#0 : index
// CHECK:           sink %[[VAL_17]] : index
// CHECK:           %[[VAL_18:.*]], %[[VAL_19:.*]] = cond_br %[[VAL_15]]#0, %[[VAL_12]] : none
// CHECK:           %[[VAL_20:.*]] = merge %[[VAL_16]] : index
// CHECK:           %[[VAL_21:.*]], %[[VAL_22:.*]] = control_merge %[[VAL_18]] : none
// CHECK:           %[[VAL_23:.*]]:3 = fork [3] %[[VAL_21]] : none
// CHECK:           sink %[[VAL_22]] : index
// CHECK:           %[[VAL_24:.*]] = constant %[[VAL_23]]#1 {value = 52 : index} : index
// CHECK:           sink %[[VAL_24]] : index
// CHECK:           %[[VAL_25:.*]] = constant %[[VAL_23]]#0 {value = 62 : index} : index
// CHECK:           sink %[[VAL_25]] : index
// CHECK:           %[[VAL_10]] = br %[[VAL_20]] : index
// CHECK:           %[[VAL_13]] = br %[[VAL_23]]#2 : none
// CHECK:           %[[VAL_26:.*]], %[[VAL_27:.*]] = control_merge %[[VAL_19]] : none
// CHECK:           sink %[[VAL_27]] : index
// CHECK:           return %[[VAL_26]] : none
// CHECK:         }
func @simple_loop() {
^bb0:
  br ^bb1
^bb1:	// pred: ^bb0
  %c42 = arith.constant 42 : index
  br ^bb2
^bb2:	// 2 preds: ^bb1, ^bb3
  %1 = arith.cmpi slt, %c42, %c42 : index
  cond_br %1, ^bb3, ^bb4
^bb3:	// pred: ^bb2
  %c52 = arith.constant 52 : index
  %c62 = arith.constant 62 : index
  br ^bb2
^bb4:	// pred: ^bb2
  return
}
